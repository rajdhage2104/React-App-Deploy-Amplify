name: React Frontend CI/CD Pipeline

# This workflow handles the CI/CD process for the React frontend
# It builds, tests, and deploys the React application to AWS Amplify

# Trigger on push to main branch or pull requests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Environment variables
env:
  AWS_REGION: ${{ secrets.AWS_REGION }} # Change to your preferred region
  AMPLIFY_APP_ID: ${{ secrets.AMPLIFY_APP_ID }} # Your Amplify app ID
  AMPLIFY_BRANCH: main # The branch to deploy to in Amplify
  SKIP_PREFLIGHT_CHECK: true # Skip Create React App dependency checks

# Permissions for OIDC authentication
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout code
      - name: Checkout
        uses: actions/checkout@v4

      # Setup Node.js - using Node.js 16 for better compatibility with older React apps
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16' # Using Node.js 16 for better compatibility
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      # Install dependencies with legacy-peer-deps to handle @material-ui/core with React 18
      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      # Create or update .env file with SKIP_PREFLIGHT_CHECK
      - name: Setup Environment
        run: |
          echo "SKIP_PREFLIGHT_CHECK=true" >> .env
          cat .env

      # Build the React app
      - name: Build
        run: npm run build

      # Configure AWS credentials using OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ARN }}
          role-session-name: react-app-session
          aws-region: ${{ secrets.AWS_REGION }}

      # Deploy to AWS Amplify
      - name: Deploy to AWS Amplify
        run: |
          # Install the AWS Amplify CLI
          npm install -g @aws-amplify/cli
          
          # Create the amplify.yml file for deployment
          cat > amplify.yml << EOF
          version: 1
          frontend:
            phases:
              build:
                commands:
                  - echo "Build already completed in previous step"
            artifacts:
              baseDirectory: build
              files:
                - '**/*'
          EOF
          
          # Use AWS CLI to create a deployment
          aws amplify start-job \
            --app-id ${{ env.AMPLIFY_APP_ID }} \
            --branch-name ${{ env.AMPLIFY_BRANCH }} \
            --job-type RELEASE